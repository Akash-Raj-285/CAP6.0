#!/bin/bash
if [ $# -gt 5 ]; then
  echo "============================================================================================================="
  echo "usage: OUTPUT_SUBPATH  JOB_CONFIGURATION NMAINJOBS NSUBJOBS NEVENTS"
  echo "============================================================================================================="
  exit 0
fi

if [ $# -lt 5 ]; then
  echo "============================================================================================================="
  echo "usage: OUTPUT_SUBPATH  JOB_CONFIGURATION NMAINJOBS NSUBJOBS NEVENTS"
  echo "============================================================================================================="
  exit 0
fi

echo "============================================================================================================="
echo "BatchRun"
echo "============================================================================================================="
echo Arg1: $1
echo Arg2: $2
echo Arg3: $3
echo Arg4: $4
echo Arg5: $5

if [ $3 -gt 50 ]; then
  echo "============================================================================================================="
  echo "WARNING: Do you really want to launch more than 40 bunches?   "
  echo "============================================================================================================="
  exit 0
fi
if [ $4 -gt 100 ]; then
  echo "============================================================================================================="
  echo "WARNING: Do you really want to launch more than 100 sub-bunches...? "
  echo "============================================================================================================="
  exit 0
fi


# =============================================================================================================
# Environment variables used in this and subsiduary shell scripts
#
# export CAP_ROOT_PATH=`pwd`
# export CAP_SRC_PATH="$CAP_ROOT_PATH/src/"
# export CAP_BIN_PATH="$CAP_ROOT_PATH/bin/"
# export CAP_LIB_PATH="$CAP_ROOT_PATH/lib/"
# export CAP_GRID_PATH="$CAP_ROOT_PATH/Grid/"
# export CAP_GRID_PATH_WSU="$CAP_ROOT_PATH/Grid/WSU/"
# export CAP_MACROS_PATH="$CAP_SRC_PATH/Macros/"
# export PATH="$CAP_BIN_PATH:$PATH"
# export DYLD_LIBRARY_PATH="$CAP_LIB_PATH:$DYLD_LIBRARY_PATH"
# export LD_LIBRARY_PATH="$CAP_LIB_PATH:$LD_LIBRARY_PATH"
# export CAP_PROJECTS_PATH="$CAP_ROOT_PATH/projects/"
# export CAP_DATABASE_PATH="$CAP_ROOT_PATH/DB/"
# export CAP_DATA_IMPORT_PATH="$DataInputPath"
# export CAP_DATA_EXPORT_PATH="$DataOutputPath"
# export CAP_HISTOS_IMPORT_PATH="$HistosInputPath"
# export CAP_HISTOS_EXPORT_PATH="$HistosOutputPath"
# export CAP_OUTPUT_SUBPATH=$1                  : Subfolder Location of outputs
# export CAP_PRODUCTION=OUT`date +%Y%m%d%H%M`   : Autogenerated subfolder name for THIS production
# export CAP_JOB_CONFIGURATION=$2               : Name of the configuration file provided on input (by user)
#
# Note 1: The macros and configuration files used by script are copied in the production directory
# Note 2: This and subsiduary scripts assumes root is provided within the conda environment CAP_CONDA.
#
# =============================================================================================================


export CAP_ROOT_PATH=`pwd`
export CAP_SRC_PATH="$CAP_ROOT_PATH/src/"
export CAP_BIN_PATH="$CAP_ROOT_PATH/bin/"
export CAP_LIB_PATH="$CAP_ROOT_PATH/lib/"
export CAP_GRID_PATH="$CAP_ROOT_PATH/Grid/"
export CAP_GRID_PATH_WSU="$CAP_ROOT_PATH/Grid/WSU/"
export CAP_MACROS_PATH="$CAP_SRC_PATH/Macros/"
export PATH="$CAP_BIN_PATH:$PATH"
export DYLD_LIBRARY_PATH="$CAP_LIB_PATH:$DYLD_LIBRARY_PATH"
export LD_LIBRARY_PATH="$CAP_LIB_PATH:$LD_LIBRARY_PATH"
export CAP_PROJECTS_PATH="$CAP_ROOT_PATH/projects/"
export CAP_DATABASE_PATH="$CAP_ROOT_PATH/DB/"
export CAP_DATA_IMPORT_PATH="$DataInputPath"
export CAP_DATA_EXPORT_PATH="$DataOutputPath"
export CAP_HISTOS_IMPORT_PATH="$HistosInputPath"
export CAP_HISTOS_EXPORT_PATH="$HistosOutputPath"
export CAP_OUTPUT_PATH="$CAP_GRID_PATH_ROM"
export CAP_OUTPUT_SUBPATH=$1
export CAP_JOB_CONFIGURATION=$2
NMAINJOBS=$3
NSUBJOBS=$4
export CAP_NEVENTS=$5
CAP_PRODUCTION=OUT`date +%Y%m%d%H%M`
echo "Environment variables are now defined for CAP"

if [ -d $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION   ]
then
  echo Production directory $PRODUCTIONDIRECTORY does exist. WAIT AT LEAST ONE MINUTE!!!!
  exit 0
fi

if [ ! -e $CAP_PROJECTS_PATH/$CAP_JOB_CONFIGURATION   ]
then
  echo The configuration file $CAP_PROJECTS/$CAP_JOB_CONFIGURATION does not exist!!!!!
  exit 0
fi


mkdir $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION
echo Production $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION

# let's preserve the configuration
cp $CAP_MACROS_PATH/RunAna.C $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION
cp $CAP_MACROS_PATH/RunSum.C $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION
cp $CAP_MACROS_PATH/RunDerived.C $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION
cp $CAP_MACROS_PATH/RunSumDerived.C $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION
cp $CAP_PROJECTS_PATH/$CAP_JOB_CONFIGURATION  $CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION

for ijob in $(seq 1 $NMAINJOBS)
do
  # launching the main generation jobs
  export CAP_WORKINGDIRECTORY=$CAP_OUTPUT_PATH/$CAP_OUTPUT_SUBPATH/$CAP_PRODUCTION/$(printf "BUNCH%02d" $ijob)
  export CAP_WORKINGDIRECTORY_Output=$CAP_WORKINGDIRECTORY
  echo Preparing to launch job  $ijob w/  working directory $CAP_WORKINGDIRECTORY w/ output $CAP_WORKINGDIRECTORY_Output
  mkdir -p $CAP_WORKINGDIRECTORY_Output
  sbatch -J batch__CAP -q primary --array=1-$NSUBJOBS --chdir=$CAP_WORKINGDIRECTORY --time=05:00:00  -o $CAP_WORKINGDIRECTORY/Job_%A_%a.out -e $CAP_WORKINGDIRECTORY/Job_%A_%a.err $CAP_GRID_ROM/RunAna.sh
  sleep 2s
done

#--mem=2G
